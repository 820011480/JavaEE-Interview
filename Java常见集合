# JavaEE面试问题总结

##### @Author LucI_PhAN

## 基础篇

### Java常见集合

**1. List 和 Set 区别**

Java中的数组是大小固定的，并且一个数组只能存放类型一样的数据。  
Java中的集合可以存储和操作数目不固定的一组数据。集合中只能存放引用类型的数据，不能存放基本数据类型。  
Collection是最基本的集合接口，声明了适用于Java集合（只包括set和list）的通用方法。Set和List都实现了Collection接口。

1.1 列表List  
List的特性是其元素以线性方式存储，集合中可以存放重复对象。  
List接口主要实现类：
- ArrayList:底层数据结构是数据。效率高，线程不安全。可以对元素进行随机的访问，查找快，增删慢。
- Vector：底层数据结构是数组。效率低但线程安全。查找快，增删慢。
- LinkedList：底层数据结构是链表。效率高，线程不安全。查找慢，增删快。

List保证插入顺序排序，集合内元素可以重复且可以根据索引直接操作元素。

1.2 集合Set  
Set是最简单的一种集合。集合中的对象不按特定的方式排序，并且没有重复对象。  
Set接口主要实现类：
- HashSet：底层数据结果是哈希表（一个元素为链表的数组），哈希表底层依赖两个方法：hashCode()和equals()。所以HashSet中存放的引用对象必须重写了Object类中的这两个方法。
- TreeSet：底层数据结构是红黑树（是一个自平衡的二叉树）。它保证元素的排序方式。（分为自然排序和比较器排序）
- LinkedHashSet：由链表保证元素有序，由哈希表保证元素唯一。

Set存储和取出顺序不一致，Set中存储的元素是惟一的，不允许重复元素，且不能根据索引获取元素。

参考资料：  
[《我们为什么要使用List和Set（List,Set详解）》](https://blog.csdn.net/qq_34149805/article/details/68943004)  
[《浅谈Java中的Set、List、Map的区别》](https://www.jianshu.com/p/7a8c2e895b5d)

**2. Set和hashCode以及equals方法的联系**

Set的实现类HashSet是一个无序不重复的集合，它根据hashCode()返回值和equals()来判断两个对象是否相同。Object中的hashCode()在默认情况下为了确保这个哈希值的唯一性，是通过将该对象的内部地址转换成一个整数来实现的。
而equals()在Object中是直接使用==（比较地址值）来判断的。因此，这不是我们通常所说的“对比是否相等”。  
因此，为了保证HashSet的元素唯一性，我们必须重写hashCode()和equals()方法来确保判断元素是否重复时是根据元素内容而不是地址值判断的。  

使用hashSet的add()方法插入元素时：
- hashSet会调用元素的hashCode()方法
- 根据hashCode()方法的返回值，确定元素要插入的位置
- 如果该位置上已经存在元素了，则调用equals()方法比较
- 如果equals()返回true，认为两个元素重复，则不存入欲插入的元素
- 如果equals()返回false，则新元素被添加到另一个位置（根据冲突检测来决定哪一个位置）

因此，使用hashSet存入一个引用类型的元素，该引用类型必须重写Object的hashCode()和equals()方法。

但是对于TreeSet，则并不需要重写这两个方法：因为TreeSet底层是红黑树，只需要为那个类实现Comparable接口病重写compareTo()方法就可以同时完成两个工作：排序和消除重复。

参考资料：  
[《深入详解SetHash的元素为什么要重写hashCode和equals方法》](https://www.2cto.com/kf/201706/648015.html)  
[《关于TreeSet 的equals 和hashcode（）问题》](https://bbs.csdn.net/topics/392043416)
